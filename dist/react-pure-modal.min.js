(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("react")) : factory(root["React"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var PureModal = function (_React$Component) {
	  _inherits(PureModal, _React$Component);

	  function PureModal(props) {
	    _classCallCheck(this, PureModal);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PureModal).call(this, props));

	    _this.handleEsc = _this.handleEsc.bind(_this);
	    _this.close = _this.close.bind(_this);
	    _this.open = _this.open.bind(_this);
	    _this.handleBackdropClick = _this.handleBackdropClick.bind(_this);
	    _this.state = {
	      isOpen: props.isOpen || false
	    };
	    return _this;
	  }

	  _createClass(PureModal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.isOpen) {
	        this.setModalContext();
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (typeof nextProps.isOpen === 'boolean') {
	        if (nextProps.isOpen) {
	          this.open();
	        } else {
	          this.close();
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unsetModalContext();
	    }
	  }, {
	    key: 'handleEsc',
	    value: function handleEsc(event) {
	      if (event.keyCode === 27) {
	        this.close();
	      }
	    }
	  }, {
	    key: 'setModalContext',
	    value: function setModalContext() {
	      document.addEventListener('keydown', this.handleEsc);
	      document.body.classList.add('body-modal-fix');
	    }
	  }, {
	    key: 'unsetModalContext',
	    value: function unsetModalContext() {
	      document.removeEventListener('keydown', this.handleEsc);
	      document.body.classList.remove('body-modal-fix');
	    }
	  }, {
	    key: 'open',
	    value: function open(event) {
	      if (event) {
	        event.stopPropagation();
	        event.preventDefault();
	      }
	      if (!this.state.isOpen) {
	        this.setState({
	          isOpen: true
	        });
	        this.setModalContext();
	      }
	    }
	  }, {
	    key: 'close',
	    value: function close(event) {
	      if (event) {
	        event.stopPropagation();
	        event.preventDefault();
	      }

	      if (this.state.isOpen) {
	        var isOpen = false;
	        if (this.props.onClose) {
	          isOpen = !this.props.onClose();
	        }

	        if (this.state.isOpen !== isOpen) {
	          this.setState({
	            isOpen: isOpen
	          });
	          this.unsetModalContext();
	        }
	      }
	    }
	  }, {
	    key: 'handleBackdropClick',
	    value: function handleBackdropClick(event) {
	      if (event) {
	        if (!event.target.classList.contains('pure-modal-backdrop')) {
	          return;
	        }
	        event.stopPropagation();
	        event.preventDefault();
	      }
	      this.close();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!this.state.isOpen) {
	        return null;
	      }

	      var _props = this.props;
	      var children = _props.children;
	      var replace = _props.replace;
	      var className = _props.className;
	      var header = _props.header;
	      var footer = _props.footer;
	      var scrollable = _props.scrollable;


	      return _react2.default.createElement(
	        'div',
	        {
	          className: 'pure-modal-backdrop ' + (scrollable ? '' : 'scrollable'),
	          onClick: this.handleBackdropClick
	        },
	        _react2.default.createElement(
	          'div',
	          { className: 'pure-modal ' + className + ' ' + (scrollable ? '' : 'auto-height') },
	          replace ? children : _react2.default.createElement(
	            'div',
	            { className: 'panel panel-default' },
	            _react2.default.createElement(
	              'div',
	              { className: 'panel-heading' },
	              header && _react2.default.createElement(
	                'h3',
	                { className: 'panel-title' },
	                header
	              ),
	              _react2.default.createElement(
	                'div',
	                { onClick: this.close, className: 'close' },
	                'Ã—'
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'panel-body ' + (scrollable ? 'scrollable' : '') },
	              children
	            ),
	            footer && _react2.default.createElement(
	              'div',
	              { className: 'panel-footer', ref: 'footer' },
	              footer
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return PureModal;
	}(_react2.default.Component);

	PureModal.defaultProps = {
	  mode: 'modal',
	  replace: false,
	  scrollable: true,
	  className: ''
	};

	PureModal.propTypes = {
	  mode: _react2.default.PropTypes.oneOf(['modal', 'tooltip']),
	  replace: _react2.default.PropTypes.bool,
	  children: _react2.default.PropTypes.node,
	  isOpen: _react2.default.PropTypes.bool,
	  scrollable: _react2.default.PropTypes.bool,
	  onClose: _react2.default.PropTypes.func,
	  className: _react2.default.PropTypes.string,
	  header: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.node, _react2.default.PropTypes.string]),
	  footer: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.node, _react2.default.PropTypes.string])
	};

	exports.default = PureModal;

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ }
/******/ ])
});
;